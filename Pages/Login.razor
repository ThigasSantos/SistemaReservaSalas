@page "/"
@using Microsoft.AspNetCore.Components.Forms
@inject UserServices userServices
@inject IJSRuntime JsRuntime
@inject NavigationManager navigationManager
@inject StateContainer stateContainer
@inject ReservaSalaAuthenticationStateProvider ReservaSalaAuthenticationStateProvider




    <div class="login-body">
    <div class="login-container">
        <h3 class="login-title">Login</h3>
        <input class="input-login-email" type="email" id="email" @bind-value="@email" />
        <input class="input-login-password" type="password" id="password" @bind-value="@password" />
        <button class="button-login" @onclick="LoginAsync">Login</button>
        <button class="button-cadastro" @onclick="GoToCadastro">Cadastrar</button>
    </div>
    </div>


@code {
    private User user = new User();

    string email;
    string password;

    @* private async Task HandleValidSubmit(User user)
    {
        User result = await userServices.Login(user);

        if (result != null)
        {
            stateContainer.user = result;
            navigationManager.NavigateTo("/sala");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Usuário ou senha inválidos");
        }
    } *@

    public async Task LoginAsync(){
        
        await ReservaSalaAuthenticationStateProvider.LoginAsync(email, password);

        if(ReservaSalaAuthenticationStateProvider.CurrentUser.Email is not null) {
            navigationManager.NavigateTo("/sala");
        }
    }

    public async Task GoToCadastro(){
            navigationManager.NavigateTo("/cadastro");
    }
}
